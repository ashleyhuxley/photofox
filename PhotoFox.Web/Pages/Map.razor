@page "/map/{id}"
@using PhotoFox.Extensions
@using PhotoFox.Model
@using PhotoFox.Services

@inject IJSRuntime JSRuntime

@inject IPhotoService PhotoService;
@inject IPhotoAlbumService AlbumService;

<div id="map" style="height:1000px;width:100%;">
</div>

@code {

    [Parameter]
    public string? Id { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initialize");
        }

        var locations = new List<Location>();
        await foreach (var photo in this.PhotoService.GetPhotosInAlbumAsync(Id))
        {
            if (photo.GeolocationLatitude.HasValue && photo.GeolocationLongitude.HasValue)
            {
                locations.Add(new Location
                    {
                        Name = photo.Title,
                        Lat = photo.GeolocationLatitude.Value,
                        Lng = photo.GeolocationLongitude.Value,
                        Thumb = $"/thumbnail/{photo.PhotoId}",
                        Link = $"/photo/{photo.DateTaken.ToPartitionKey()}/{photo.PhotoId}"
                    });
            }
        }

        await JSRuntime.InvokeVoidAsync("setMarkers", locations);
    }

    public class Location
    {
        public string? Name { get; set; }
        public double Lat { get; set; }
        public double Lng { get; set; }
        public string? Thumb { get; set; }
        public string? Link { get; set; }
    }
}