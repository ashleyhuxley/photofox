<Window x:Class="PhotoFox.Ui.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PhotoFox.Wpf.Ui.Mvvm.ViewModels;assembly=PhotoFox.Wpf.Ui.Mvvm" xmlns:wpf="clr-namespace:PhotoFox.Ui.Wpf" xmlns:fa="http://schemas.fontawesome.io/icons/"
        d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
        mc:Ignorable="d" Icon="Images/photofox.png"
        Loaded="Window_Loaded"
        Title="PhotoFox" Height="800" Width="1200"
        KeyDown="Window_KeyDown">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityCOnverter" />
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" Height="25">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="300" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <wpf:ImageButton Command="{Binding StopLoadingCommand}" Width="20" Height="20" ImageSource="/Images/stop.png" ImageWidth="20" ImageHeight="20" ImageLocation="Center" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Text="{Binding LoadingStatusText}" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <TextBlock>
                    <Run>Albums: </Run>
                    <Run Text="{Binding AlbumCount, Mode=OneWay}" />
                    <Run> - </Run>
                    <Run>Photos: </Run>
                    <Run Text="{Binding Photos.Count, Mode=OneWay}" />
                    <Run> - </Run>
                    <Run>Videos: </Run>
                    <Run Text="{Binding Videos.Count, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="350" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <Label 
                        Visibility="{Binding LoadingIndicatorVisible, Converter={StaticResource BoolToVisibilityCOnverter}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="18"
                        FontWeight="Bold"
                        Margin="0,0,0,15">
                        Loading...
                    </Label>
                    <fa:ImageAwesome Icon="Refresh" Spin="True" Height="48" Width="48" HorizontalAlignment="Center" />
                </StackPanel>

                <ListView
                    Grid.Row="0" Grid.Column="0" 
                    x:Name="FolderList"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ItemsSource="{Binding Folders}"
                    SelectedItem="{Binding SelectedFolder}"
                    Visibility="{Binding FolderListVisible, Converter={StaticResource BoolToVisibilityCOnverter}}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Title}" FontSize="16" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="White">
                                <Label.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF80CEF3" Offset="0.01" />
                                        <GradientStop Color="#FF5588A0" Offset="1" />
                                    </LinearGradientBrush>
                                </Label.Background>
                            </Label>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

                <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

                <ListView
                    Grid.Row="2"
                    x:Name="AlbumList" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Top" 
                    ItemsSource="{Binding Albums}" 
                    SelectedItem="{Binding SelectedAlbum}">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit Album..." Command="{Binding EditSelectedAlbumCommand}" CommandParameter="{Binding SelectedAlbum}" />
                            <MenuItem Header="Delete Album" Command="{Binding DeleteAlbumCommand}" CommandParameter="{Binding SelectedAlbum}" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,20">
                                <Image Source="{Binding Image}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="150" />
                                <TextBlock Text="{Binding Title}" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

            <TabControl Grid.Column="2">
                <TabItem Header="Photos">
                    <ListView
                        x:Name="PhotoList" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" 
                        ScrollViewer.VerticalScrollBarVisibility="Visible" 
                        ItemsSource="{Binding Photos}"
                        SelectedItem="{Binding SelectedPhoto}"
                        AllowDrop="True"
                        Drop="PhotoList_Drop">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open Image" Command="{Binding OpenPhotoCommand}" />
                                <Separator />
                                <MenuItem Header="Copy image to album..." Command="{Binding AddToAlbumCommand}" />
                                <MenuItem Header="Move image to album..." Command="{Binding MoveToAlbumCommand}" />
                                <Separator />
                                <MenuItem Header="Delete image" Command="{Binding DeletePhotoCommand}" CommandParameter="{Binding SelectedPhotos}" />
                                <MenuItem Header="Set as album cover" Command="{Binding SetAlbumCoverCommand}" />
                                <MenuItem Header="Reload EXIF" Command="{Binding ReloadExifCommand}" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                <EventSetter Event="MouseDoubleClick" Handler="PhotoDoubleClicked" />
                                <EventSetter Event="PreviewKeyDown" Handler="PhotoItem_PreviewKeyDown" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="6" HorizontalAlignment="Stretch" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="Auto" Margin="0,0,0,20">
                                    <Image Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="150" />
                                    <TextBlock Text="{Binding Title}" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Name}" FontSize="16" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="White" Margin="0,0,0,10">
                                            <Label.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF80CEF3" Offset="0.01" />
                                                    <GradientStop Color="#FF5588A0" Offset="1" />
                                                </LinearGradientBrush>
                                            </Label.Background>
                                        </Label>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                </TabItem>
                <TabItem Header="Videos">
                    <ListView
                        x:Name="VideoList" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" 
                        ScrollViewer.VerticalScrollBarVisibility="Visible" 
                        ItemsSource="{Binding Videos}"
                        SelectedItem="{Binding SelectedVideo}"
                        AllowDrop="True"
                        Drop="PhotoList_Drop">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                <EventSetter Event="MouseDoubleClick" Handler="VideoItemDoubleClick" />
                                <EventSetter Event="PreviewKeyDown" Handler="VideoItem_PreviewKeyDown" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="6" HorizontalAlignment="Stretch" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="Auto" Margin="0,0,0,20">
                                    <Image Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="150" />
                                    <TextBlock Text="{Binding Title}" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="Auto" Margin="0,0,0,20">
                                            <Image Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="150" />
                                            <TextBlock Text="{Binding Title}" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                                        </StackPanel>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Stretch" />

            <StackPanel Orientation="Vertical" Grid.Column="4">
                <StackPanel.Resources>
                    <Style x:Key="LabelStyle" TargetType="Label">
                        <Setter Property="FontWeight" Value="Bold" />
                    </Style>
                    <Style x:Key="PropertyStyle" TargetType="FrameworkElement">
                        <Setter Property="Margin" Value="10,0,10,0" />
                    </Style>
                </StackPanel.Resources>
                <Label Style="{StaticResource LabelStyle}">Title</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.Title}" Style="{StaticResource PropertyStyle}" />
                
                <Label Style="{StaticResource LabelStyle}">Description</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.ImageProperties.Description}" Style="{StaticResource PropertyStyle}" />
                
                <Label Style="{StaticResource LabelStyle}">Dimensions</Label>
                <TextBlock Text="{Binding SelectedPhoto.Dimensions}" Style="{StaticResource PropertyStyle}" />
                
                <Label Style="{StaticResource LabelStyle}">Date Taken</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.DateTaken}" Style="{StaticResource PropertyStyle}" />

                <Label Style="{StaticResource LabelStyle}">Manufacturer</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.CameraSettings.Manufacturer}" Style="{StaticResource PropertyStyle}" />
                
                <Label Style="{StaticResource LabelStyle}">Device</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.CameraSettings.Device}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">Aperture</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.CameraSettings.Aperture}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">Exposure</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.CameraSettings.Exposure}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">ISO</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.CameraSettings.ISO}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">Focal Length</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.CameraSettings.FocalLength}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">File Size</Label>
                <TextBlock Text="{Binding SelectedPhoto.FileSize}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">Orientation</Label>
                <TextBlock Text="{Binding SelectedPhoto.Item.ImageProperties.Orientation}" Style="{StaticResource PropertyStyle}" />
                <Label Style="{StaticResource LabelStyle}">Rating</Label>
                <wpf:RatingControl Value="{Binding SelectedPhoto.StarRating}" />
                <Label Style="{StaticResource LabelStyle}">GPS Location</Label>
                <Button Margin="10,0,0,0" Content="{Binding SelectedPhoto.GpsCoords}" Cursor="Hand" Command="{Binding OpenGpsLink}" CommandParameter="{Binding SelectedPhoto}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <TextBlock TextDecorations="Underline">
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="Blue" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
